{"ast":null,"code":"import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\nimport * as actionTypes from './actionTypes'; // import { decode } from 'querystring';\n//Register user\n\nexport const registerUser = (userData, history) => dispatch => {\n  console.log(userData);\n  axios.post('/users/post', userData).then(res => history.push(\"/login\")).catch(err => dispatch({\n    type: actionTypes.GET_ERRORS,\n    payload: err.response.data\n  }));\n}; //Login - get user token\n\nexport const loginUser = userData => dispatch => {\n  axios.post('localhost/users/login', userData).then(res => {\n    const token = res.data.token;\n    console.log(token); //set token to localstorage\n\n    localStorage.setItem('jwtToken', token); //Set token to auth header\n\n    setAuthToken(token.token);\n    const decoded = jwt_decode(token.token); //set current user\n\n    dispatch(setCurrentUser(decoded)); // console.log(token)\n  }).catch(err => dispatch({\n    type: actionTypes.GET_ERRORS,\n    payload: err.response.data\n  }));\n}; //set logged in user\n\nexport const setCurrentUser = decoded => {\n  return {\n    type: actionTypes.SET_CURRENT_USER,\n    payload: decoded\n  };\n}; //User loading\n\nexport const setUserLoading = () => {\n  return {\n    type: actionTypes.USER_LOADING\n  };\n}; //User log out\n\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem('jwtToken');\n  setAuthToken(false);\n  dispatch(setCurrentUser({}));\n};","map":{"version":3,"sources":["/home/binar/di binar/react/fullstack/react-login/src/actions/authAction.js"],"names":["axios","setAuthToken","jwt_decode","actionTypes","registerUser","userData","history","dispatch","console","log","post","then","res","push","catch","err","type","GET_ERRORS","payload","response","data","loginUser","token","localStorage","setItem","decoded","setCurrentUser","SET_CURRENT_USER","setUserLoading","USER_LOADING","logoutUser","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B,C,CACA;AAGA;;AACA,OAAO,MAAMC,YAAY,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAuBC,QAAQ,IAAI;AAC3DC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACAL,EAAAA,KAAK,CAACU,IAAN,CAAW,aAAX,EAA0BL,QAA1B,EACCM,IADD,CACMC,GAAG,IAAIN,OAAO,CAACO,IAAR,CAAa,QAAb,CADb,EAECC,KAFD,CAEOC,GAAG,IACNR,QAAQ,CAAC;AACLS,IAAAA,IAAI,EAAEb,WAAW,CAACc,UADb;AAELC,IAAAA,OAAO,EAAEH,GAAG,CAACI,QAAJ,CAAaC;AAFjB,GAAD,CAHZ;AAQH,CAVM,C,CAYP;;AACA,OAAO,MAAMC,SAAS,GAAGhB,QAAQ,IAAIE,QAAQ,IAAI;AAC7CP,EAAAA,KAAK,CAACU,IAAN,CAAW,uBAAX,EAAoCL,QAApC,EACCM,IADD,CACOC,GAAG,IAAI;AAAA,UACFU,KADE,GACQV,GAAG,CAACQ,IADZ,CACFE,KADE;AAEVd,IAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ,EAFU,CAGV;;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC,EAJU,CAKV;;AACArB,IAAAA,YAAY,CAACqB,KAAK,CAACA,KAAP,CAAZ;AACA,UAAMG,OAAO,GAAGvB,UAAU,CAACoB,KAAK,CAACA,KAAP,CAA1B,CAPU,CAQV;;AACAf,IAAAA,QAAQ,CAACmB,cAAc,CAACD,OAAD,CAAf,CAAR,CATU,CAUV;AACH,GAZD,EAcCX,KAdD,CAcOC,GAAG,IAAIR,QAAQ,CAAC;AACnBS,IAAAA,IAAI,EAAEb,WAAW,CAACc,UADC;AAEnBC,IAAAA,OAAO,EAAEH,GAAG,CAACI,QAAJ,CAAaC;AAFH,GAAD,CAdtB;AAmBH,CApBM,C,CAsBP;;AACA,OAAO,MAAMM,cAAc,GAAGD,OAAO,IAAI;AACrC,SAAO;AACHT,IAAAA,IAAI,EAAEb,WAAW,CAACwB,gBADf;AAEHT,IAAAA,OAAO,EAAEO;AAFN,GAAP;AAIH,CALM,C,CAQP;;AACA,OAAO,MAAMG,cAAc,GAAG,MAAM;AAChC,SAAO;AACHZ,IAAAA,IAAI,EAAEb,WAAW,CAAC0B;AADf,GAAP;AAGH,CAJM,C,CAMP;;AACA,OAAO,MAAMC,UAAU,GAAG,MAAMvB,QAAQ,IAAI;AACxCgB,EAAAA,YAAY,CAACQ,UAAb,CAAwB,UAAxB;AACA9B,EAAAA,YAAY,CAAC,KAAD,CAAZ;AACAM,EAAAA,QAAQ,CAACmB,cAAc,CAAC,EAAD,CAAf,CAAR;AAEH,CALM","sourcesContent":["import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\n\nimport * as actionTypes from './actionTypes'\n// import { decode } from 'querystring';\n\n\n//Register user\nexport const registerUser = (userData, history) => dispatch => {\n    console.log(userData)\n    axios.post('/users/post', userData)\n    .then(res => history.push(\"/login\"))\n    .catch(err => \n        dispatch({\n            type: actionTypes.GET_ERRORS,\n            payload: err.response.data\n        })\n        )\n}\n\n//Login - get user token\nexport const loginUser = userData => dispatch => {\n    axios.post('localhost/users/login', userData)\n    .then( res => {\n        const { token } = res.data;\n        console.log(token)\n        //set token to localstorage\n        localStorage.setItem('jwtToken', token);\n        //Set token to auth header\n        setAuthToken(token.token);\n        const decoded = jwt_decode(token.token);\n        //set current user\n        dispatch(setCurrentUser(decoded));\n        // console.log(token)\n    }\n    )    \n    .catch(err => dispatch({\n        type: actionTypes.GET_ERRORS,\n        payload: err.response.data\n    })\n    )\n}\n\n//set logged in user\nexport const setCurrentUser = decoded => {\n    return {\n        type: actionTypes.SET_CURRENT_USER,\n        payload: decoded\n    }\n}\n\n\n//User loading\nexport const setUserLoading = () => {\n    return {\n        type: actionTypes.USER_LOADING\n    }\n}\n\n//User log out\nexport const logoutUser = () => dispatch => {\n    localStorage.removeItem('jwtToken')\n    setAuthToken(false);\n    dispatch(setCurrentUser({}));\n    \n}\n"]},"metadata":{},"sourceType":"module"}